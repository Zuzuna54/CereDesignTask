flowchart TD
    classDef app fill:#e8f5e9,stroke:#2e7d32,stroke-width:1px
    classDef phase fill:#e3f2fd,stroke:#1565c0,stroke-width:1px
    classDef strategy fill:#fff9c4,stroke:#f57f17,stroke-width:1px
    classDef risk fill:#ffcdd2,stroke:#c62828,stroke-width:1px
    classDef complete fill:#f5f5f5,stroke:#333,stroke-width:1px,stroke-dasharray: 5 5
    classDef sectionTitle fill:#ede7f6,stroke:#4527a0,stroke-width:2px
    classDef timeline fill:#e0f2f1,stroke:#00796b,stroke-width:1px
    classDef support fill:#f3e5f5,stroke:#6a1b9a,stroke-width:1px
    
    %% Main Title - Central Organizing Element
    MigrationTitle["Unified SDK/API Migration Strategy"]:::sectionTitle
    
    %% Architecture States
    subgraph ArchitectureStates["Architecture Transition"]
        direction TB
        
        %% Current State - More compact representation
        subgraph CurrentState["Current State Architecture"]
            direction TB
            
            %% Group applications together
            subgraph CurrentApps["Client Applications"]
                direction LR
                TelegramApps["Telegram Mini Apps"]:::app
                TelegramBots["Telegram Bot Services"]:::app
                DroneClients["Drone Client Applications"]:::app
                VideoProcessing["Video Processing Services"]:::app
                OtherServices["Other Internal Services"]:::app
            end
            
            %% Group SDKs together
            subgraph CurrentSDKs["Current SDKs/APIs"]
                direction LR
                DataCloudSDK["Data Cloud SDK"]
                ActivitySDK["Activity SDK"]
                HttpAPI["HTTP API"]
            end
            
            %% Current connections - simplified
            CurrentApps --> CurrentSDKs
        end
        
        %% Add transition arrow
        CurrentState -- "Migration Process" --> FutureState
        
        %% Future State - More compact representation
        subgraph FutureState["Future State Architecture"]
            direction TB
            
            %% Group applications together
            subgraph FutureApps["Client Applications"]
                direction LR
                TelegramAppsFuture["Telegram Mini Apps"]:::app
                TelegramBotsFuture["Telegram Bot Services"]:::app
                DroneClientsFuture["Drone Client Applications"]:::app
                VideoProcessingFuture["Video Processing Services"]:::app
                OtherServicesFuture["Other Internal Services"]:::app
            end
            
            %% Unified SDK
            UnifiedSDK["Unified SDK/API"]
            
            %% Future connections - simplified
            FutureApps --> UnifiedSDK
        end
    end
    
    %% Connect to Main Title
    MigrationTitle --> ArchitectureStates
    
    %% Migration Strategy Section
    subgraph MigrationStrategySection["Migration Strategy & Phasing"]
        direction TB
        
        %% Migration Phases - Timeline representation
        subgraph MigrationPhases["Migration Phases Timeline"]
            direction LR
            Phase1["Phase 1: Pilot<br>(Weeks 1-4)"]:::phase
            Phase2["Phase 2: Low-Risk Apps<br>(Weeks 5-10)"]:::phase
            Phase3["Phase 3: Medium-Risk Apps<br>(Weeks 11-18)"]:::phase
            Phase4["Phase 4: High-Risk Apps<br>(Weeks 19-24)"]:::phase
            Phase5["Phase 5: Legacy SDK<br>Deprecation<br>(Week 25+)"]:::phase
            
            Phase1 --> Phase2 --> Phase3 --> Phase4 --> Phase5
        end
        
        %% Migration Strategies - Better organized
        subgraph MigrationStrategies["Migration Strategy Options"]
            direction TB
            
            StrategyTitle["Strategy Selection Based on App Complexity"]
            
            subgraph LowRiskStrategies["Low-Risk Apps"]
                direction LR
                BigBang["Big Bang Replacement:<br>Simple, isolated apps"]:::strategy
            end
            
            subgraph MediumRiskStrategies["Medium-Risk Apps"]
                direction LR
                FeatureFlags["Feature Flag Strategy:<br>Toggle between old<br>and new SDK"]:::strategy
            end
            
            subgraph HighRiskStrategies["High-Risk/Critical Apps"]
                direction LR
                StrangerPattern["Strangler Fig Pattern:<br>Incremental Migration"]:::strategy
                ParallelRuns["Parallel Run Strategy:<br>Run both SDKs<br>side by side"]:::strategy
            end
            
            StrategyTitle --> LowRiskStrategies & MediumRiskStrategies & HighRiskStrategies
        end
    end
    
    %% Connect to Main Title
    MigrationTitle --> MigrationStrategySection
    
    %% Application-Specific Plans
    subgraph AppMigrationPlans["Application-Specific Migration Plans"]
        direction TB
        
        %% Two columns of application plans
        subgraph AppGroup1["User-Facing Applications"]
            direction TB
            
            %% Telegram Mini Apps Migration
            subgraph TelegramMigration["Telegram Apps Migration"]
                direction TB
                TelegramPlan["Telegram Mini Apps<br>Migration Plan"]
                TelegramPlan -- "Week 1-4: Pilot" --> TelegramPilot[Pilot with single app]:::phase
                TelegramPilot -- "Weeks 5-10: 25%" --> TelegramWave1[First Wave]:::phase
                TelegramWave1 -- "Weeks 11-18: 50%" --> TelegramWave2[Second Wave]:::phase
                TelegramWave2 -- "Weeks 19-24: Remaining" --> TelegramComplete[Complete]:::complete
            end
            
            %% Telegram Bots Migration
            subgraph BotsMigration["Telegram Bots Migration"]
                direction TB
                BotsPlan["Telegram Bot Services<br>Migration Plan"]
                BotsPlan -- "Weeks 5-10: Pilot" --> BotsPilot[Pilot with single bot]:::phase
                BotsPilot -- "Weeks 11-18: 50%" --> BotsWave1[First Wave]:::phase
                BotsWave1 -- "Weeks 19-24: Remaining" --> BotsComplete[Complete]:::complete
            end
        end
        
        subgraph AppGroup2["Backend & Processing Applications"]
            direction TB
            
            %% Drone Clients Migration
            subgraph DroneMigration["Drone Applications Migration"]
                direction TB
                DronePlan["Drone Client Applications<br>Migration Plan"]
                DronePlan -- "Weeks 1-4: Test" --> DronePilot[Pilot Program]:::phase
                DronePilot -- "Weeks 11-18: Non-prod" --> DroneWave1[First Wave]:::phase
                DroneWave1 -- "Weeks 19-24: Production" --> DroneComplete[Complete]:::complete
            end
            
            %% Video Processing Migration
            subgraph VideoMigration["Video Processing Migration"]
                direction TB
                VideoPlan["Video Processing<br>Migration Plan"]
                VideoPlan -- "Weeks 11-18: Parallel runs" --> VideoPilot[Parallel Testing]:::phase
                VideoPilot -- "Weeks 19-24: Full migration" --> VideoComplete[Complete]:::complete
            end
            
            %% Other Services Migration
            subgraph OtherMigration["Other Services Migration"]
                direction TB
                OtherPlan["Other Internal Services<br>Migration Plan"]
                OtherPlan -- "By complexity" --> OtherWave1[Low Complexity]:::phase
                OtherWave1 -- "By dependency" --> OtherWave2[Medium Complexity]:::phase
                OtherWave2 -- "Critical services" --> OtherWave3[High Complexity]:::phase
                OtherWave3 -- "Complete all" --> OtherComplete[Complete]:::complete
            end
        end
    end
    
    %% Connect to Strategy Section
    MigrationStrategySection --> AppMigrationPlans
    
    %% Risk Management Section
    subgraph RiskManagement["Risk Management & Contingency Planning"]
        direction TB
        
        %% Risk Factors - Better organized
        subgraph RiskFactors["Migration Risks & Mitigations"]
            direction LR
            
            subgraph DataRisks["Data Integrity Risks"]
                direction TB
                DataLoss["Risk: Data Loss"]:::risk
                DataLoss -- "Mitigation" --> DataMitigation["Parallel writes during<br>migration period"]
            end
            
            subgraph AvailabilityRisks["Availability Risks"]
                direction TB
                Downtime["Risk: Service Downtime"]:::risk
                Downtime -- "Mitigation" --> DowntimeMitigation["Feature toggles for<br>immediate rollback"]
            end
            
            subgraph PerformanceRisks["Performance Risks"]
                direction TB
                PerformanceRisk["Risk: Performance<br>Degradation"]:::risk
                PerformanceRisk -- "Mitigation" --> PerfMitigation["Performance testing &<br>continuous monitoring"]
            end
            
            subgraph IntegrationRisks["Integration Risks"]
                direction TB
                IntegrationRisk["Risk: Integration<br>Failures"]:::risk
                IntegrationRisk -- "Mitigation" --> IntegrationMitigation["Comprehensive<br>integration testing suite"]
            end
        end
        
        %% Rollback Plan - More structured
        subgraph RollbackPlanSection["Rollback Plan"]
            direction TB
            
            RollbackStep1["1. Activate Feature Flag<br>to revert to legacy SDK"]
            RollbackStep2["2. Monitor for successful<br>rollback completion"]
            RollbackStep3["3. Conduct root cause analysis<br>before retry"]
            
            RollbackStep1 --> RollbackStep2 --> RollbackStep3
        end
    end
    
    %% Connect to Application Plans
    AppMigrationPlans --> RiskManagement
    
    %% Timeline & Support
    subgraph TimelineAndSupport["Timeline & Support Resources"]
        direction LR
        
        %% SDK Deprecation Timeline
        subgraph DeprecationTimelineSection["SDK Deprecation Timeline"]
            direction TB
            DepNotice["Week 25:<br>Deprecation Notice"]:::timeline
            SupportPeriod["Weeks 25-51:<br>Extended Support Period"]:::timeline
            EOL["Week 52+:<br>End-of-Life"]:::timeline
            
            DepNotice --> SupportPeriod --> EOL
        end
        
        %% Education and Support - More structured
        subgraph SupportSection["Training & Support Plan"]
            direction TB
            
            subgraph Documentation["Documentation"]
                direction TB
                Docs["New SDK Documentation"]:::support
                Guides["Step-by-step Migration Guides"]:::support
            end
            
            subgraph TrainingSupport["Training & Live Support"]
                direction TB
                Workshops["Developer Workshops"]:::support
                OfficeHours["Weekly Office Hours"]:::support
            end
        end
    end
    
    %% Connect to Risk Management
    RiskManagement --> TimelineAndSupport
    
    %% Overall Flow Connections
    subgraph ConnectionsNote["Key Decision Points"]
        StrategySelection["1. Select appropriate<br>migration strategy per app"]
        PhaseAlignment["2. Align application migration<br>with phased approach"]
        RiskAssessment["3. Assess risks and<br>prepare mitigations"]
        TimelineCommitment["4. Commit to deprecation<br>timeline"]
    end
    
    MigrationTitle --> ConnectionsNote
    ConnectionsNote --> MigrationStrategySection
    
    %% Add a new comprehensive contingency section
    subgraph ContingencyPlans["Comprehensive Contingency Planning"]
        direction TB
        
        ContingencyTitle["Risk-Based Contingency Planning Matrix"]:::sectionTitle
        
        subgraph MigrationChallenges["Migration Challenge Scenarios"]
            direction LR
            
            subgraph PerformanceContingency["Performance Degradation Scenario"]
                direction TB
                PerfTrigger["Trigger: >20% response
                time increase or throughput
                decrease post-migration"]:::risk
                
                PerfResponse1["Immediate Response:
                • Roll back affected app to legacy SDK
                • Activate monitoring alerts
                • Inform stakeholders"]
                
                PerfResponse2["Mitigation Plan:
                • Run comparative benchmarks
                • Profile SDK performance
                • Optimize critical paths
                • Implement caching if needed"]
                
                PerfResponse3["Prevention Strategy:
                • Pre-migration performance baseline testing
                • Load testing with production-like volume
                • Performance acceptance criteria
                • Gradual traffic shifting"]
                
                PerfTrigger --> PerfResponse1 --> PerfResponse2 --> PerfResponse3
            end
            
            subgraph DataContingency["Data Integrity/Loss Scenario"]
                direction TB
                DataTrigger["Trigger: Data discrepancy
                detected between systems or
                missing/corrupt data"]:::risk
                
                DataResponse1["Immediate Response:
                • Halt further migrations
                • Enable parallel writes
                • Activate recovery procedures
                • Document data impact"]
                
                DataResponse2["Mitigation Plan:
                • Run data reconciliation jobs
                • Recover from backup if needed
                • Verify data consistency
                • Audit trail investigation"]
                
                DataResponse3["Prevention Strategy:
                • Data validation in Unified SDK
                • Checksums and data verification
                • Double-write period before cutover
                • Automated data consistency checks"]
                
                DataTrigger --> DataResponse1 --> DataResponse2 --> DataResponse3
            end
            
            subgraph AvailabilityContingency["Service Unavailability Scenario"]
                direction TB
                AvailTrigger["Trigger: Service errors or
                unavailability after migration
                detected"]:::risk
                
                AvailResponse1["Immediate Response:
                • Automated rollback to legacy SDK
                • Alert incident response team
                • Restore service with cached config
                • Customer communication"]
                
                AvailResponse2["Mitigation Plan:
                • Post-mortem analysis
                • Fix root cause issues
                • Enhance monitoring
                • Update rollback procedures"]
                
                AvailResponse3["Prevention Strategy:
                • Canary deployments
                • Blue/green migration approach
                • Shadow traffic testing
                • Circuit breakers in SDK design"]
                
                AvailTrigger --> AvailResponse1 --> AvailResponse2 --> AvailResponse3
            end
        end
        
        subgraph TeamContingency["Team & Resource Contingencies"]
            direction TB
            
            ResourceShortage["Resource Constraint Risk:
            • Key team member unavailability 
            • Competing priorities
            • Budget constraints"]:::risk
            
            ResourceResponse["Mitigation Strategies:
            • Cross-trained team members
            • Detailed documentation
            • Pre-approved emergency budget
            • Flexible timeline buffers
            • On-demand 3rd party expertise"]
            
            ResourceShortage --> ResourceResponse
        end
        
        subgraph ScheduleContingency["Schedule Contingencies"]
            direction TB
            
            ScheduleDelay["Schedule Risk:
            • Timeline slippage
            • Dependent service delays
            • Unexpected complexity"]:::risk
            
            ScheduleResponse["Mitigation Strategies:
            • Critical path focus
            • Modular deliverables
            • Weekly go/no-go decision points
            • Alternative implementation paths
            • Scope adjustment protocols"]
            
            ScheduleDelay --> ScheduleResponse
        end
        
        subgraph EscalationMatrix["Escalation & Decision Matrix"]
            direction TB
            
            Level1["Level 1: Technical Team
            • Handle routine issues
            • Implement standard rollbacks
            • Apply documented solutions"]
            
            Level2["Level 2: Project Manager & Leads
            • Resource allocation issues
            • Cross-team dependencies
            • Moderate scope changes"]
            
            Level3["Level 3: Steering Committee
            • Critical business impact
            • Major scope/timeline changes
            • Significant risk acceptance
            • Budget modifications"]
            
            Level1 --> Level2 --> Level3
        end
    end
    
    %% Connect contingency to the Risk Management section
    RiskManagement --> ContingencyPlans
    
    %% Add rollback automation section
    subgraph RollbackAutomation["Rollback Automation & Testing"]
        direction TB
        
        RollbackTitle["Automated Rollback Infrastructure"]
        
        RollbackDesign["Key Design Elements:
        • One-click rollback capability
        • Regular rollback rehearsals
        • Automated data reconciliation
        • Health check verification
        • Configuration version control"]
        
        RollbackTesting["Rollback Testing Strategy:
        • Bi-weekly rollback drills
        • Simulated failure scenarios
        • Recovery time objective validation
        • Cross-team participation
        • Lessons learned documentation"]
        
        RollbackMetrics["Rollback Success Metrics:
        • Recovery Time Objective (RTO): <15 min
        • Recovery Point Objective (RPO): <5 min
        • Service Restoration Rate: >99.5%
        • Data Consistency Post-Rollback: 100%"]
        
        RollbackTitle --> RollbackDesign --> RollbackTesting --> RollbackMetrics
    end
    
    %% Connect rollback automation to the contingency plans
    ContingencyPlans --> RollbackAutomation
    
    %% Add transition support
    subgraph TransitionSupport["Migration Transition Support"]
        direction TB
        
        SupportTitle["Comprehensive Support Infrastructure"]
        
        SupportTeam["Dedicated Migration Support Team:
        • SDK specialists available 24/7 during migrations
        • Technical writers for documentation updates
        • Performance analysts for real-time monitoring
        • Data specialists for integrity verification"]
        
        WarRooms["Dedicated War Rooms:
        • Scheduled during critical migrations
        • Real-time dashboards & monitoring
        • Direct escalation channels
        • Cross-functional team presence"]
        
        HyperCare["Post-Migration Hyper-Care:
        • 2-week intensive monitoring period
        • Daily health checks & reporting
        • Rapid response team on standby
        • Proactive issue detection
        • Metrics validation"]
        
        SupportTitle --> SupportTeam --> WarRooms --> HyperCare
    end
    
    %% Connect transition support to rollback automation
    RollbackAutomation --> TransitionSupport
    
    %% Add adoption tracking
    subgraph AdoptionTracking["Migration Progress & Adoption Tracking"]
        direction TB
        
        TrackingTitle["Migration Progress Dashboard"]
        
        TrackingMetrics["Key Migration Metrics:
        • % Apps Migrated vs. Target
        • Data Volume Processed by Unified SDK
        • Error Rates Comparison (old vs. new)
        • Performance Deltas
        • Support Ticket Volume"]
        
        MilestoneTracking["Key Adoption Milestones:
        • Initial Adoption: 20% of apps
        • Critical Mass: 50% of apps
        • Legacy Reduction: 80% on new SDK
        • Full Adoption: 100% migration
        • Legacy SDK Decommission"]
        
        SuccessDefinition["Migration Success Criteria:
        • Zero data loss/corruption incidents
        • No critical service disruptions
        • Performance equal or better than legacy
        • Full feature parity achieved
        • Developer satisfaction metrics met"]
        
        TrackingTitle --> TrackingMetrics --> MilestoneTracking --> SuccessDefinition
    end
    
    %% Connect adoption tracking to transition support
    TransitionSupport --> AdoptionTracking
    
    %% Update Timeline & Support to include feedback mechanisms
    subgraph FeedbackLoops["Developer Feedback Mechanisms"]
        direction TB
        
        FeedbackTitle["Continuous Improvement Pipeline"]
        
        FeedbackChannels["Feedback Collection:
        • Developer satisfaction surveys
        • SDK usage analytics
        • Support ticket patterns
        • Performance telemetry
        • Migration experience interviews"]
        
        FeedbackProcess["Feedback Processing:
        • Weekly triage of collected feedback
        • Prioritization matrix
        • Quick fix identification
        • Feature request tracking
        • Documentation improvement backlog"]
        
        SDKImprovements["SDK Enhancement Cycle:
        • Bi-weekly minor releases
        • Monthly feature releases
        • Documentation updates
        • Example code repositories
        • SDK upgrade paths"]
        
        FeedbackTitle --> FeedbackChannels --> FeedbackProcess --> SDKImprovements
    end
    
    %% Connect feedback loops to adoption tracking
    AdoptionTracking --> FeedbackLoops
    
    %% Connect all the way back to the main title for completeness
    FeedbackLoops -.-> MigrationTitle 